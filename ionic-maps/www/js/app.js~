// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
angular.module('starter', ['ionic', 'ngCordova'])

.config(function($stateProvider, $urlRouterProvider){
	$stateProvider
	.state('map', {
		url: '/',
		templateUrl: 'templates/map.html',
		controller: 'MapCtrl'
	});

	$urlRouterProvider.otherwise("/");
})

.run(function($ionicPlatform, GoogleMaps) {
  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    if(window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
    }
    if(window.StatusBar) {
      StatusBar.styleDefault();
    }
    GoogleMaps.init();
  });
})

.controller('MapCtrl', function($scope, $state, $cordovaGeolocation){

})

.factory('Markers', function($http){
	var markers = [];
	return{
		getMarkers: function(){
			return $http.get("http://localhost/google_maps_stuff/markers.php").then(function(response){
				markers = response;
				return markers;
			});
		},
		getMarker: function(id){
		}
	}
})

.factory('GoogleMaps', function($cordovaGeolocation, Markers){

	var apiKey = false;
	var map = null;

	function initMap(){
		var options = {timeout: 10000, enableHighAccuracy: true};

		$cordovaGeolocation.getCurrentPosition(options).then(function(position){

			var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
			var mapOptions = {
				center: latLng,
				zoom: 15,
				mapTypeId: google.maps.MapTypeId.ROADMAP
			};

			map = new google.maps.Map(document.getElementById("map"), mapOptions);

			google.maps.event.addListenerOnce(map, 'idle', function(){
				loadMarkers();
			});
		}, function(error){
			console.log("Could not get location");
			loadMarkers();
		});
	}

	function loadMarkers(){
		Markers.getMarkers().then(function(markers){
			console.log("Markers: ", markers);
			console.log(markers.data);
			var records = markers.data.markers;
			for(var i = 0; i < records.length; i++){
				var record = records[i];
				var markerPos = new google.maps.LatLng(record.lat, record.lng);
				var marker = new google.maps.Marker({
					map: map,
					animation: google.maps.Animation.DROP,
					position: markerPos 
				});
				var infoWindowContent = "<h4>" + record.name + "</h4>";
				addInfoWindow(marker, infoWindowContent, record);
			}
		});
	}

	function addInfoWindow(marker, message, record){
		var infoWindow = new google.maps.InfoWindow({
			content: message
		});
		google.maps.event.addListener(marker, 'click', function(){
			infoWindow.open(map, marker);
		});
	}

	return{
		init: function(){
			initMap();
		}
	}
})
